namespace nidcpowerSharp
{
    public static class NiDCPowerConstants
    {
        public const int NIDCPOWER_MAJOR_VERSION = 25;
        public const int NIDCPOWER_MINOR_VERSION = 5;
        public const int NIDCPOWER_UPDATE_VERSION = 0;
        public const int NIDCPOWER_CLASS_SPEC_MAJOR_VERSION = 3;
        public const int NIDCPOWER_CLASS_SPEC_MINOR_VERSION = 0;
        public const uint NIDCPOWER_ATTR_BASE = 1150000;
        public const uint NIDCPOWER_ATTR_PRIVATE_BASE = 1200000;
        public const int NIDCPOWER_VAL_BASE = 1000;
        public const uint NIDCPOWER_ERROR_BASE = 0xbffa4000;
        public const uint NIDCPOWER_WARN_BASE = 0x3ffa4000;
        public const uint NIDCPOWER_ATTR_RANGE_CHECK = 1050002;
        public const uint NIDCPOWER_ATTR_QUERY_INSTRUMENT_STATUS = 1050003;
        public const uint NIDCPOWER_ATTR_CACHE = 1050004;
        public const uint NIDCPOWER_ATTR_SIMULATE = 1050005;
        public const uint NIDCPOWER_ATTR_RECORD_COERCIONS = 1050006;
        public const uint NIDCPOWER_ATTR_INTERCHANGE_CHECK = 1050021;
        public const uint NIDCPOWER_ATTR_CHANNEL_COUNT = 1050203;
        public const uint NIDCPOWER_ATTR_SUPPORTED_INSTRUMENT_MODELS = 1050327;
        public const uint NIDCPOWER_ATTR_GROUP_CAPABILITIES = 1050401;
        public const uint NIDCPOWER_ATTR_SPECIFIC_DRIVER_PREFIX = 1050302;
        public const uint NIDCPOWER_ATTR_SPECIFIC_DRIVER_REVISION = 1050551;
        public const uint NIDCPOWER_ATTR_SPECIFIC_DRIVER_VENDOR = 1050513;
        public const uint NIDCPOWER_ATTR_SPECIFIC_DRIVER_DESCRIPTION = 1050514;
        public const uint NIDCPOWER_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION = 1050515;
        public const uint NIDCPOWER_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION = 1050516;
        public const uint NIDCPOWER_ATTR_INSTRUMENT_MANUFACTURER = 1050511;
        public const uint NIDCPOWER_ATTR_INSTRUMENT_MODEL = 1050512;
        public const uint NIDCPOWER_ATTR_INSTRUMENT_FIRMWARE_REVISION = 1050510;
        public const uint NIDCPOWER_ATTR_SERIAL_NUMBER = (NIDCPOWER_ATTR_BASE + 152);
        public const uint NIDCPOWER_ATTR_LOGICAL_NAME = 1050305;
        public const uint NIDCPOWER_ATTR_IO_RESOURCE_DESCRIPTOR = 1050304;
        public const uint NIDCPOWER_ATTR_DRIVER_SETUP = 1050007;
        public const uint NIDCPOWER_ATTR_SOURCE_MODE = (NIDCPOWER_ATTR_BASE + 54);
        public const uint NIDCPOWER_ATTR_OUTPUT_FUNCTION = (NIDCPOWER_ATTR_BASE + 8);
        public const uint NIDCPOWER_ATTR_OUTPUT_ENABLED = 1250006;
        public const uint NIDCPOWER_ATTR_OUTPUT_CONNECTED = (NIDCPOWER_ATTR_BASE + 60);
        public const uint NIDCPOWER_ATTR_OUTPUT_RESISTANCE = (NIDCPOWER_ATTR_BASE + 61);
        public const uint NIDCPOWER_ATTR_TRANSIENT_RESPONSE = (NIDCPOWER_ATTR_BASE + 62);
        public const uint NIDCPOWER_ATTR_VOLTAGE_GAIN_BANDWIDTH = (NIDCPOWER_ATTR_BASE + 67);
        public const uint NIDCPOWER_ATTR_VOLTAGE_COMPENSATION_FREQUENCY = (NIDCPOWER_ATTR_BASE + 68);
        public const uint NIDCPOWER_ATTR_VOLTAGE_POLE_ZERO_RATIO = (NIDCPOWER_ATTR_BASE + 69);
        public const uint NIDCPOWER_ATTR_CURRENT_GAIN_BANDWIDTH = (NIDCPOWER_ATTR_BASE + 70);
        public const uint NIDCPOWER_ATTR_CURRENT_COMPENSATION_FREQUENCY = (NIDCPOWER_ATTR_BASE + 71);
        public const uint NIDCPOWER_ATTR_CURRENT_POLE_ZERO_RATIO = (NIDCPOWER_ATTR_BASE + 72);
        public const uint NIDCPOWER_ATTR_CONSTANT_POWER_COMPENSATION_FREQUENCY = (NIDCPOWER_ATTR_BASE + 360);
        public const uint NIDCPOWER_ATTR_CONSTANT_POWER_GAIN_BANDWIDTH = (NIDCPOWER_ATTR_BASE + 362);
        public const uint NIDCPOWER_ATTR_CONSTANT_POWER_POLE_ZERO_RATIO = (NIDCPOWER_ATTR_BASE + 365);
        public const uint NIDCPOWER_ATTR_CONSTANT_RESISTANCE_COMPENSATION_FREQUENCY = (NIDCPOWER_ATTR_BASE + 366);
        public const uint NIDCPOWER_ATTR_CONSTANT_RESISTANCE_GAIN_BANDWIDTH = (NIDCPOWER_ATTR_BASE + 368);
        public const uint NIDCPOWER_ATTR_CONSTANT_RESISTANCE_POLE_ZERO_RATIO = (NIDCPOWER_ATTR_BASE + 371);
        public const uint NIDCPOWER_ATTR_VOLTAGE_LEVEL = 1250001;
        public const uint NIDCPOWER_ATTR_CURRENT_LIMIT = 1250005;
        public const uint NIDCPOWER_ATTR_VOLTAGE_LEVEL_RANGE = (NIDCPOWER_ATTR_BASE + 5);
        public const uint NIDCPOWER_ATTR_CURRENT_LIMIT_RANGE = (NIDCPOWER_ATTR_BASE + 4);
        public const uint NIDCPOWER_ATTR_CURRENT_LIMIT_BEHAVIOR = 1250004;
        public const uint NIDCPOWER_ATTR_VOLTAGE_LEVEL_AUTORANGE = (NIDCPOWER_ATTR_BASE + 15);
        public const uint NIDCPOWER_ATTR_CURRENT_LIMIT_AUTORANGE = (NIDCPOWER_ATTR_BASE + 16);
        public const uint NIDCPOWER_ATTR_CURRENT_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 187);
        public const uint NIDCPOWER_ATTR_CURRENT_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 188);
        public const uint NIDCPOWER_ATTR_CURRENT_LEVEL = (NIDCPOWER_ATTR_BASE + 9);
        public const uint NIDCPOWER_ATTR_VOLTAGE_LIMIT = (NIDCPOWER_ATTR_BASE + 10);
        public const uint NIDCPOWER_ATTR_CURRENT_LEVEL_RANGE = (NIDCPOWER_ATTR_BASE + 11);
        public const uint NIDCPOWER_ATTR_VOLTAGE_LIMIT_RANGE = (NIDCPOWER_ATTR_BASE + 12);
        public const uint NIDCPOWER_ATTR_CURRENT_LEVEL_AUTORANGE = (NIDCPOWER_ATTR_BASE + 17);
        public const uint NIDCPOWER_ATTR_VOLTAGE_LIMIT_AUTORANGE = (NIDCPOWER_ATTR_BASE + 18);
        public const uint NIDCPOWER_ATTR_VOLTAGE_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 185);
        public const uint NIDCPOWER_ATTR_VOLTAGE_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 186);
        public const uint NIDCPOWER_ATTR_CURRENT_LEVEL_RISING_SLEW_RATE = (NIDCPOWER_ATTR_BASE + 343);
        public const uint NIDCPOWER_ATTR_CURRENT_LEVEL_FALLING_SLEW_RATE = (NIDCPOWER_ATTR_BASE + 344);
        public const uint NIDCPOWER_ATTR_PULSE_VOLTAGE_LEVEL = (NIDCPOWER_ATTR_BASE + 80);
        public const uint NIDCPOWER_ATTR_PULSE_CURRENT_LIMIT = (NIDCPOWER_ATTR_BASE + 81);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_VOLTAGE_LEVEL = (NIDCPOWER_ATTR_BASE + 82);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_CURRENT_LIMIT = (NIDCPOWER_ATTR_BASE + 83);
        public const uint NIDCPOWER_ATTR_PULSE_VOLTAGE_LEVEL_RANGE = (NIDCPOWER_ATTR_BASE + 84);
        public const uint NIDCPOWER_ATTR_PULSE_CURRENT_LIMIT_RANGE = (NIDCPOWER_ATTR_BASE + 85);
        public const uint NIDCPOWER_ATTR_PULSE_CURRENT_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 193);
        public const uint NIDCPOWER_ATTR_PULSE_CURRENT_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 194);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_CURRENT_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 195);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_CURRENT_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 196);
        public const uint NIDCPOWER_ATTR_PULSE_CURRENT_LEVEL = (NIDCPOWER_ATTR_BASE + 86);
        public const uint NIDCPOWER_ATTR_PULSE_VOLTAGE_LIMIT = (NIDCPOWER_ATTR_BASE + 87);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_CURRENT_LEVEL = (NIDCPOWER_ATTR_BASE + 88);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_VOLTAGE_LIMIT = (NIDCPOWER_ATTR_BASE + 89);
        public const uint NIDCPOWER_ATTR_PULSE_CURRENT_LEVEL_RANGE = (NIDCPOWER_ATTR_BASE + 90);
        public const uint NIDCPOWER_ATTR_PULSE_VOLTAGE_LIMIT_RANGE = (NIDCPOWER_ATTR_BASE + 91);
        public const uint NIDCPOWER_ATTR_PULSE_VOLTAGE_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 189);
        public const uint NIDCPOWER_ATTR_PULSE_VOLTAGE_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 190);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_VOLTAGE_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 191);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_VOLTAGE_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 192);
        public const uint NIDCPOWER_ATTR_SOURCE_DELAY = (NIDCPOWER_ATTR_BASE + 51);
        public const uint NIDCPOWER_ATTR_OVERRANGING_ENABLED = (NIDCPOWER_ATTR_BASE + 7);
        public const uint NIDCPOWER_ATTR_OUTPUT_CAPACITANCE = (NIDCPOWER_ATTR_BASE + 14);
        public const uint NIDCPOWER_ATTR_SEQUENCE_LOOP_COUNT = (NIDCPOWER_ATTR_BASE + 25);
        public const uint NIDCPOWER_ATTR_SEQUENCE_LOOP_COUNT_IS_FINITE = (NIDCPOWER_ATTR_BASE + 78);
        public const uint NIDCPOWER_ATTR_COMPLIANCE_LIMIT_SYMMETRY = (NIDCPOWER_ATTR_BASE + 184);
        public const uint NIDCPOWER_ATTR_SEQUENCE_STEP_DELTA_TIME = (NIDCPOWER_ATTR_BASE + 198);
        public const uint NIDCPOWER_ATTR_SEQUENCE_STEP_DELTA_TIME_ENABLED = (NIDCPOWER_ATTR_BASE + 199);
        public const uint NIDCPOWER_ATTR_ACTUAL_POWER_ALLOCATION = (NIDCPOWER_ATTR_BASE + 205);
        public const uint NIDCPOWER_ATTR_REQUESTED_POWER_ALLOCATION = (NIDCPOWER_ATTR_BASE + 206);
        public const uint NIDCPOWER_ATTR_POWER_ALLOCATION_MODE = (NIDCPOWER_ATTR_BASE + 207);
        public const uint NIDCPOWER_ATTR_MERGED_CHANNELS = (NIDCPOWER_ATTR_BASE + 249);
        public const uint NIDCPOWER_ATTR_OUTPUT_SHORTED = (NIDCPOWER_ATTR_BASE + 372);
        public const uint NIDCPOWER_ATTR_PULSE_BIAS_DELAY = (NIDCPOWER_ATTR_BASE + 92);
        public const uint NIDCPOWER_ATTR_PULSE_ON_TIME = (NIDCPOWER_ATTR_BASE + 93);
        public const uint NIDCPOWER_ATTR_PULSE_OFF_TIME = (NIDCPOWER_ATTR_BASE + 94);
        public const uint NIDCPOWER_ATTR_OVP_ENABLED = 1250002;
        public const uint NIDCPOWER_ATTR_OVP_LIMIT = 1250003;
        public const uint NIDCPOWER_ATTR_CONDUCTION_VOLTAGE_MODE = (NIDCPOWER_ATTR_BASE + 350);
        public const uint NIDCPOWER_ATTR_CONDUCTION_VOLTAGE_ON_THRESHOLD = (NIDCPOWER_ATTR_BASE + 351);
        public const uint NIDCPOWER_ATTR_CONDUCTION_VOLTAGE_OFF_THRESHOLD = (NIDCPOWER_ATTR_BASE + 352);
        public const uint NIDCPOWER_ATTR_SENSE = (NIDCPOWER_ATTR_BASE + 13);
        public const uint NIDCPOWER_ATTR_AUTO_ZERO = (NIDCPOWER_ATTR_BASE + 55);
        public const uint NIDCPOWER_ATTR_APERTURE_TIME = (NIDCPOWER_ATTR_BASE + 58);
        public const uint NIDCPOWER_ATTR_APERTURE_TIME_UNITS = (NIDCPOWER_ATTR_BASE + 59);
        public const uint NIDCPOWER_ATTR_POWER_LINE_FREQUENCY = (NIDCPOWER_ATTR_BASE + 20);
        public const uint NIDCPOWER_ATTR_SAMPLES_TO_AVERAGE = (NIDCPOWER_ATTR_BASE + 3);
        public const uint NIDCPOWER_ATTR_FETCH_BACKLOG = (NIDCPOWER_ATTR_BASE + 56);
        public const uint NIDCPOWER_ATTR_APERTURE_TIME_AUTO_MODE = (NIDCPOWER_ATTR_BASE + 314);
        public const uint NIDCPOWER_ATTR_MEASURE_RECORD_LENGTH = (NIDCPOWER_ATTR_BASE + 63);
        public const uint NIDCPOWER_ATTR_MEASURE_RECORD_LENGTH_IS_FINITE = (NIDCPOWER_ATTR_BASE + 64);
        public const uint NIDCPOWER_ATTR_MEASURE_RECORD_DELTA_TIME = (NIDCPOWER_ATTR_BASE + 65);
        public const uint NIDCPOWER_ATTR_AUTORANGE = (NIDCPOWER_ATTR_BASE + 244);
        public const uint NIDCPOWER_ATTR_MEASURE_WHEN = (NIDCPOWER_ATTR_BASE + 57);
        public const uint NIDCPOWER_ATTR_RESET_AVERAGE_BEFORE_MEASUREMENT = (NIDCPOWER_ATTR_BASE + 6);
        public const uint NIDCPOWER_ATTR_DC_NOISE_REJECTION = (NIDCPOWER_ATTR_BASE + 66);
        public const uint NIDCPOWER_ATTR_MEASURE_BUFFER_SIZE = (NIDCPOWER_ATTR_BASE + 77);
        public const uint NIDCPOWER_ATTR_AUTORANGE_BEHAVIOR = (NIDCPOWER_ATTR_BASE + 245);
        public const uint NIDCPOWER_ATTR_AUTORANGE_APERTURE_TIME_MODE = (NIDCPOWER_ATTR_BASE + 246);
        public const uint NIDCPOWER_ATTR_AUTORANGE_MINIMUM_APERTURE_TIME = (NIDCPOWER_ATTR_BASE + 247);
        public const uint NIDCPOWER_ATTR_AUTORANGE_MINIMUM_APERTURE_TIME_UNITS = (NIDCPOWER_ATTR_BASE + 248);
        public const uint NIDCPOWER_ATTR_AUTORANGE_MINIMUM_CURRENT_RANGE = (NIDCPOWER_ATTR_BASE + 255);
        public const uint NIDCPOWER_ATTR_AUTORANGE_MINIMUM_VOLTAGE_RANGE = (NIDCPOWER_ATTR_BASE + 256);
        public const uint NIDCPOWER_ATTR_AUTORANGE_THRESHOLD_MODE = (NIDCPOWER_ATTR_BASE + 257);
        public const uint NIDCPOWER_ATTR_AUTORANGE_MAXIMUM_DELAY_AFTER_RANGE_CHANGE = (NIDCPOWER_ATTR_BASE + 322);
        public const uint NIDCPOWER_ATTR_SELF_CALIBRATION_PERSISTENCE = (NIDCPOWER_ATTR_BASE + 73);
        public const uint NIDCPOWER_ATTR_INTERLOCK_INPUT_OPEN = (NIDCPOWER_ATTR_BASE + 105);
        public const uint NIDCPOWER_ATTR_POWER_SOURCE = (NIDCPOWER_ATTR_BASE + 0);
        public const uint NIDCPOWER_ATTR_POWER_SOURCE_IN_USE = (NIDCPOWER_ATTR_BASE + 1);
        public const uint NIDCPOWER_ATTR_AUXILIARY_POWER_SOURCE_AVAILABLE = (NIDCPOWER_ATTR_BASE + 2);
        public const uint NIDCPOWER_ATTR_ISOLATION_STATE = (NIDCPOWER_ATTR_BASE + 302);
        public const uint NIDCPOWER_ATTR_START_TRIGGER_TYPE = (NIDCPOWER_ATTR_BASE + 21);
        public const uint NIDCPOWER_ATTR_EXPORTED_START_TRIGGER_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 24);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_START_TRIGGER_EDGE = (NIDCPOWER_ATTR_BASE + 22);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_START_TRIGGER_INPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 23);
        public const uint NIDCPOWER_ATTR_SOURCE_TRIGGER_TYPE = (NIDCPOWER_ATTR_BASE + 30);
        public const uint NIDCPOWER_ATTR_EXPORTED_SOURCE_TRIGGER_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 33);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_SOURCE_TRIGGER_EDGE = (NIDCPOWER_ATTR_BASE + 31);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_SOURCE_TRIGGER_INPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 32);
        public const uint NIDCPOWER_ATTR_MEASURE_TRIGGER_TYPE = (NIDCPOWER_ATTR_BASE + 34);
        public const uint NIDCPOWER_ATTR_EXPORTED_MEASURE_TRIGGER_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 37);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_MEASURE_TRIGGER_EDGE = (NIDCPOWER_ATTR_BASE + 35);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_MEASURE_TRIGGER_INPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 36);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ADVANCE_TRIGGER_TYPE = (NIDCPOWER_ATTR_BASE + 26);
        public const uint NIDCPOWER_ATTR_EXPORTED_SEQUENCE_ADVANCE_TRIGGER_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 29);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_SEQUENCE_ADVANCE_TRIGGER_EDGE = (NIDCPOWER_ATTR_BASE + 27);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_SEQUENCE_ADVANCE_TRIGGER_INPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 28);
        public const uint NIDCPOWER_ATTR_SOURCE_COMPLETE_EVENT_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 43);
        public const uint NIDCPOWER_ATTR_SOURCE_COMPLETE_EVENT_OUTPUT_BEHAVIOR = (NIDCPOWER_ATTR_BASE + 331);
        public const uint NIDCPOWER_ATTR_SOURCE_COMPLETE_EVENT_PULSE_POLARITY = (NIDCPOWER_ATTR_BASE + 41);
        public const uint NIDCPOWER_ATTR_SOURCE_COMPLETE_EVENT_PULSE_WIDTH = (NIDCPOWER_ATTR_BASE + 42);
        public const uint NIDCPOWER_ATTR_SOURCE_COMPLETE_EVENT_TOGGLE_INITIAL_STATE = (NIDCPOWER_ATTR_BASE + 332);
        public const uint NIDCPOWER_ATTR_MEASURE_COMPLETE_EVENT_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 47);
        public const uint NIDCPOWER_ATTR_MEASURE_COMPLETE_EVENT_DELAY = (NIDCPOWER_ATTR_BASE + 46);
        public const uint NIDCPOWER_ATTR_MEASURE_COMPLETE_EVENT_OUTPUT_BEHAVIOR = (NIDCPOWER_ATTR_BASE + 333);
        public const uint NIDCPOWER_ATTR_MEASURE_COMPLETE_EVENT_PULSE_POLARITY = (NIDCPOWER_ATTR_BASE + 44);
        public const uint NIDCPOWER_ATTR_MEASURE_COMPLETE_EVENT_PULSE_WIDTH = (NIDCPOWER_ATTR_BASE + 45);
        public const uint NIDCPOWER_ATTR_MEASURE_COMPLETE_EVENT_TOGGLE_INITIAL_STATE = (NIDCPOWER_ATTR_BASE + 334);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ITERATION_COMPLETE_EVENT_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 40);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ITERATION_COMPLETE_EVENT_OUTPUT_BEHAVIOR = (NIDCPOWER_ATTR_BASE + 335);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ITERATION_COMPLETE_EVENT_PULSE_POLARITY = (NIDCPOWER_ATTR_BASE + 38);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ITERATION_COMPLETE_EVENT_PULSE_WIDTH = (NIDCPOWER_ATTR_BASE + 39);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ITERATION_COMPLETE_EVENT_TOGGLE_INITIAL_STATE = (NIDCPOWER_ATTR_BASE + 336);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ENGINE_DONE_EVENT_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 50);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ENGINE_DONE_EVENT_OUTPUT_BEHAVIOR = (NIDCPOWER_ATTR_BASE + 345);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ENGINE_DONE_EVENT_PULSE_POLARITY = (NIDCPOWER_ATTR_BASE + 48);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ENGINE_DONE_EVENT_PULSE_WIDTH = (NIDCPOWER_ATTR_BASE + 49);
        public const uint NIDCPOWER_ATTR_SEQUENCE_ENGINE_DONE_EVENT_TOGGLE_INITIAL_STATE = (NIDCPOWER_ATTR_BASE + 346);
        public const uint NIDCPOWER_ATTR_ACTIVE_ADVANCED_SEQUENCE = (NIDCPOWER_ATTR_BASE + 74);
        public const uint NIDCPOWER_ATTR_ACTIVE_ADVANCED_SEQUENCE_STEP = (NIDCPOWER_ATTR_BASE + 75);
        public const uint NIDCPOWER_ATTR_PULSE_TRIGGER_TYPE = (NIDCPOWER_ATTR_BASE + 95);
        public const uint NIDCPOWER_ATTR_EXPORTED_PULSE_TRIGGER_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 98);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_PULSE_TRIGGER_EDGE = (NIDCPOWER_ATTR_BASE + 96);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_PULSE_TRIGGER_INPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 97);
        public const uint NIDCPOWER_ATTR_PULSE_COMPLETE_EVENT_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 99);
        public const uint NIDCPOWER_ATTR_PULSE_COMPLETE_EVENT_PULSE_POLARITY = (NIDCPOWER_ATTR_BASE + 100);
        public const uint NIDCPOWER_ATTR_PULSE_COMPLETE_EVENT_PULSE_WIDTH = (NIDCPOWER_ATTR_BASE + 101);
        public const uint NIDCPOWER_ATTR_READY_FOR_PULSE_TRIGGER_EVENT_OUTPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 102);
        public const uint NIDCPOWER_ATTR_READY_FOR_PULSE_TRIGGER_EVENT_PULSE_POLARITY = (NIDCPOWER_ATTR_BASE + 103);
        public const uint NIDCPOWER_ATTR_READY_FOR_PULSE_TRIGGER_EVENT_PULSE_WIDTH = (NIDCPOWER_ATTR_BASE + 104);
        public const uint NIDCPOWER_ATTR_SHUTDOWN_TRIGGER_TYPE = (NIDCPOWER_ATTR_BASE + 275);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_SHUTDOWN_TRIGGER_EDGE = (NIDCPOWER_ATTR_BASE + 276);
        public const uint NIDCPOWER_ATTR_DIGITAL_EDGE_SHUTDOWN_TRIGGER_INPUT_TERMINAL = (NIDCPOWER_ATTR_BASE + 277);
        public const uint NIDCPOWER_ATTR_INSTRUMENT_MODE = (NIDCPOWER_ATTR_BASE + 208);
        public const uint NIDCPOWER_ATTR_LCR_MEASUREMENT_TIME = (NIDCPOWER_ATTR_BASE + 218);
        public const uint NIDCPOWER_ATTR_LCR_CUSTOM_MEASUREMENT_TIME = (NIDCPOWER_ATTR_BASE + 258);
        public const uint NIDCPOWER_ATTR_LCR_SOURCE_DELAY_MODE = (NIDCPOWER_ATTR_BASE + 315);
        public const uint NIDCPOWER_ATTR_LCR_STIMULUS_FUNCTION = (NIDCPOWER_ATTR_BASE + 209);
        public const uint NIDCPOWER_ATTR_LCR_FREQUENCY = (NIDCPOWER_ATTR_BASE + 210);
        public const uint NIDCPOWER_ATTR_LCR_VOLTAGE_AMPLITUDE = (NIDCPOWER_ATTR_BASE + 211);
        public const uint NIDCPOWER_ATTR_LCR_CURRENT_AMPLITUDE = (NIDCPOWER_ATTR_BASE + 212);
        public const uint NIDCPOWER_ATTR_LCR_AUTOMATIC_LEVEL_CONTROL = (NIDCPOWER_ATTR_BASE + 290);
        public const uint NIDCPOWER_ATTR_LCR_DC_BIAS_SOURCE = (NIDCPOWER_ATTR_BASE + 213);
        public const uint NIDCPOWER_ATTR_LCR_DC_BIAS_VOLTAGE_LEVEL = (NIDCPOWER_ATTR_BASE + 214);
        public const uint NIDCPOWER_ATTR_LCR_DC_BIAS_CURRENT_LEVEL = (NIDCPOWER_ATTR_BASE + 215);
        public const uint NIDCPOWER_ATTR_LCR_DC_BIAS_AUTOMATIC_LEVEL_CONTROL = (NIDCPOWER_ATTR_BASE + 291);
        public const uint NIDCPOWER_ATTR_LCR_IMPEDANCE_AUTO_RANGE = (NIDCPOWER_ATTR_BASE + 216);
        public const uint NIDCPOWER_ATTR_LCR_IMPEDANCE_RANGE = (NIDCPOWER_ATTR_BASE + 217);
        public const uint NIDCPOWER_ATTR_LCR_OPEN_COMPENSATION_ENABLED = (NIDCPOWER_ATTR_BASE + 220);
        public const uint NIDCPOWER_ATTR_LCR_OPEN_CONDUCTANCE = (NIDCPOWER_ATTR_BASE + 261);
        public const uint NIDCPOWER_ATTR_LCR_OPEN_SUSCEPTANCE = (NIDCPOWER_ATTR_BASE + 262);
        public const uint NIDCPOWER_ATTR_LCR_SHORT_COMPENSATION_ENABLED = (NIDCPOWER_ATTR_BASE + 221);
        public const uint NIDCPOWER_ATTR_LCR_SHORT_RESISTANCE = (NIDCPOWER_ATTR_BASE + 263);
        public const uint NIDCPOWER_ATTR_LCR_SHORT_REACTANCE = (NIDCPOWER_ATTR_BASE + 264);
        public const uint NIDCPOWER_ATTR_LCR_LOAD_COMPENSATION_ENABLED = (NIDCPOWER_ATTR_BASE + 222);
        public const uint NIDCPOWER_ATTR_LCR_MEASURED_LOAD_RESISTANCE = (NIDCPOWER_ATTR_BASE + 268);
        public const uint NIDCPOWER_ATTR_LCR_MEASURED_LOAD_REACTANCE = (NIDCPOWER_ATTR_BASE + 269);
        public const uint NIDCPOWER_ATTR_LCR_ACTUAL_LOAD_RESISTANCE = (NIDCPOWER_ATTR_BASE + 270);
        public const uint NIDCPOWER_ATTR_LCR_ACTUAL_LOAD_REACTANCE = (NIDCPOWER_ATTR_BASE + 271);
        public const uint NIDCPOWER_ATTR_LCR_OPEN_SHORT_LOAD_COMPENSATION_DATA_SOURCE = (NIDCPOWER_ATTR_BASE + 223);
        public const uint NIDCPOWER_ATTR_LCR_SHORT_CUSTOM_CABLE_COMPENSATION_ENABLED = (NIDCPOWER_ATTR_BASE + 299);
        public const uint NIDCPOWER_ATTR_LCR_AC_ELECTRICAL_CABLE_LENGTH_DELAY = (NIDCPOWER_ATTR_BASE + 309);
        public const uint NIDCPOWER_ATTR_LCR_VOLTAGE_RANGE = (NIDCPOWER_ATTR_BASE + 265);
        public const uint NIDCPOWER_ATTR_LCR_CURRENT_RANGE = (NIDCPOWER_ATTR_BASE + 267);
        public const uint NIDCPOWER_ATTR_LCR_AC_DITHER_ENABLED = (NIDCPOWER_ATTR_BASE + 348);
        public const uint NIDCPOWER_ATTR_LCR_SOURCE_APERTURE_TIME = (NIDCPOWER_ATTR_BASE + 349);
        public const uint NIDCPOWER_ATTR_LCR_DC_BIAS_VOLTAGE_RANGE = (NIDCPOWER_ATTR_BASE + 266);
        public const uint NIDCPOWER_ATTR_LCR_DC_BIAS_CURRENT_RANGE = (NIDCPOWER_ATTR_BASE + 274);
        public const uint NIDCPOWER_ATTR_LCR_DC_BIAS_TRANSIENT_RESPONSE = (NIDCPOWER_ATTR_BASE + 347);
        public const uint NIDCPOWER_ATTR_CABLE_LENGTH = (NIDCPOWER_ATTR_BASE + 278);
        public const uint NIDCPOWER_ATTR_LCR_LOAD_RESISTANCE = (NIDCPOWER_ATTR_BASE + 318);
        public const uint NIDCPOWER_ATTR_LCR_LOAD_INDUCTANCE = (NIDCPOWER_ATTR_BASE + 319);
        public const uint NIDCPOWER_ATTR_LCR_LOAD_CAPACITANCE = (NIDCPOWER_ATTR_BASE + 320);
        public const uint NIDCPOWER_ATTR_LCR_IMPEDANCE_RANGE_SOURCE = (NIDCPOWER_ATTR_BASE + 321);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_ENABLED = (NIDCPOWER_ATTR_BASE + 235);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_VOLTAGE_OUTPUT_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 236);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_CURRENT_MEASURE_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 237);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_VOLTAGE_CHANGE_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 238);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_CURRENT_CHANGE_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 239);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_CURRENT_OVERRANGE_ENABLED = (NIDCPOWER_ATTR_BASE + 240);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_VOLTAGE_OUTPUT_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 292);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_CURRENT_MEASURE_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 293);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_VOLTAGE_CHANGE_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 294);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_CURRENT_CHANGE_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 295);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_DELAY = (NIDCPOWER_ATTR_BASE + 300);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_VOLTAGE_MEASURE_LIMIT_HIGH = (NIDCPOWER_ATTR_BASE + 357);
        public const uint NIDCPOWER_ATTR_OUTPUT_CUTOFF_VOLTAGE_MEASURE_LIMIT_LOW = (NIDCPOWER_ATTR_BASE + 358);
        public const uint NIDCPOWER_ATTR_CONSTANT_POWER_CURRENT_LIMIT = (NIDCPOWER_ATTR_BASE + 361);
        public const uint NIDCPOWER_ATTR_CONSTANT_POWER_LEVEL = (NIDCPOWER_ATTR_BASE + 363);
        public const uint NIDCPOWER_ATTR_CONSTANT_POWER_LEVEL_RANGE = (NIDCPOWER_ATTR_BASE + 364);
        public const uint NIDCPOWER_ATTR_CONSTANT_RESISTANCE_CURRENT_LIMIT = (NIDCPOWER_ATTR_BASE + 367);
        public const uint NIDCPOWER_ATTR_CONSTANT_RESISTANCE_LEVEL = (NIDCPOWER_ATTR_BASE + 369);
        public const uint NIDCPOWER_ATTR_CONSTANT_RESISTANCE_LEVEL_RANGE = (NIDCPOWER_ATTR_BASE + 370);
        public const int NIDCPOWER_VAL_CURRENT_REGULATE = 0;
        public const int NIDCPOWER_VAL_CURRENT_TRIP = 1;
        public const int NIDCPOWER_VAL_OUTPUT_CONSTANT_VOLTAGE = 0;
        public const int NIDCPOWER_VAL_OUTPUT_CONSTANT_CURRENT = 1;
        public const int NIDCPOWER_VAL_OUTPUT_OVER_VOLTAGE = 2;
        public const int NIDCPOWER_VAL_OUTPUT_OVER_CURRENT = 3;
        public const int NIDCPOWER_VAL_OUTPUT_UNREGULATED = 4;
        public const int NIDCPOWER_VAL_OUTPUT_INHIBITED = (NIDCPOWER_VAL_BASE + 163);
        public const int NIDCPOWER_VAL_MEASURE_CURRENT = 0;
        public const int NIDCPOWER_VAL_MEASURE_VOLTAGE = 1;
        public const int NIDCPOWER_VAL_CANCEL = (NIDCPOWER_VAL_BASE + 1);
        public const int NIDCPOWER_VAL_COMMIT = (NIDCPOWER_VAL_BASE + 2);
        public const int NIDCPOWER_VAL_INTERNAL = (NIDCPOWER_VAL_BASE + 3);
        public const int NIDCPOWER_VAL_AUXILIARY = (NIDCPOWER_VAL_BASE + 4);
        public const int NIDCPOWER_VAL_AUTOMATIC = (NIDCPOWER_VAL_BASE + 5);
        public const int NIDCPOWER_VAL_DC_VOLTAGE = (NIDCPOWER_VAL_BASE + 6);
        public const int NIDCPOWER_VAL_DC_CURRENT = (NIDCPOWER_VAL_BASE + 7);
        public const int NIDCPOWER_VAL_PULSE_VOLTAGE = (NIDCPOWER_VAL_BASE + 49);
        public const int NIDCPOWER_VAL_PULSE_CURRENT = (NIDCPOWER_VAL_BASE + 50);
        public const int NIDCPOWER_VAL_CONSTANT_RESISTANCE = (NIDCPOWER_VAL_BASE + 161);
        public const int NIDCPOWER_VAL_CONSTANT_POWER = (NIDCPOWER_VAL_BASE + 162);
        public const int NIDCPOWER_VAL_LOCAL = (NIDCPOWER_VAL_BASE + 8);
        public const int NIDCPOWER_VAL_REMOTE = (NIDCPOWER_VAL_BASE + 9);
        public const int NIDCPOWER_VAL_LOW = (NIDCPOWER_VAL_BASE + 10);
        public const int NIDCPOWER_VAL_HIGH = (NIDCPOWER_VAL_BASE + 11);
        public const int NIDCPOWER_VAL_NONE = (NIDCPOWER_VAL_BASE + 12);
        public const int NIDCPOWER_VAL_DIGITAL_EDGE = (NIDCPOWER_VAL_BASE + 14);
        public const int NIDCPOWER_VAL_SOFTWARE_EDGE = (NIDCPOWER_VAL_BASE + 15);
        public const int NIDCPOWER_VAL_RISING = (NIDCPOWER_VAL_BASE + 16);
        public const int NIDCPOWER_VAL_FALLING = (NIDCPOWER_VAL_BASE + 17);
        public const int NIDCPOWER_VAL_ACTIVE_HIGH = (NIDCPOWER_VAL_BASE + 18);
        public const int NIDCPOWER_VAL_ACTIVE_LOW = (NIDCPOWER_VAL_BASE + 19);
        public const int NIDCPOWER_VAL_SINGLE_POINT = (NIDCPOWER_VAL_BASE + 20);
        public const int NIDCPOWER_VAL_SEQUENCE = (NIDCPOWER_VAL_BASE + 21);
        public const int NIDCPOWER_VAL_OFF = 0;
        public const int NIDCPOWER_VAL_ONCE = (NIDCPOWER_VAL_BASE + 24);
        public const int NIDCPOWER_VAL_ON = 1;
        public const int NIDCPOWER_VAL_AUTOMATICALLY_AFTER_SOURCE_COMPLETE = (NIDCPOWER_VAL_BASE + 25);
        public const int NIDCPOWER_VAL_ON_DEMAND = (NIDCPOWER_VAL_BASE + 26);
        public const int NIDCPOWER_VAL_ON_MEASURE_TRIGGER = (NIDCPOWER_VAL_BASE + 27);
        public const double NIDCPOWER_VAL_50_HERTZ = 50.0;
        public const double NIDCPOWER_VAL_60_HERTZ = 60.0;
        public const int NIDCPOWER_VAL_SECONDS = (NIDCPOWER_VAL_BASE + 28);
        public const int NIDCPOWER_VAL_POWER_LINE_CYCLES = (NIDCPOWER_VAL_BASE + 29);
        public const int NIDCPOWER_VAL_SOURCE_COMPLETE_EVENT = (NIDCPOWER_VAL_BASE + 30);
        public const int NIDCPOWER_VAL_MEASURE_COMPLETE_EVENT = (NIDCPOWER_VAL_BASE + 31);
        public const int NIDCPOWER_VAL_SEQUENCE_ITERATION_COMPLETE_EVENT = (NIDCPOWER_VAL_BASE + 32);
        public const int NIDCPOWER_VAL_SEQUENCE_ENGINE_DONE_EVENT = (NIDCPOWER_VAL_BASE + 33);
        public const int NIDCPOWER_VAL_PULSE_COMPLETE_EVENT = (NIDCPOWER_VAL_BASE + 51);
        public const int NIDCPOWER_VAL_READY_FOR_PULSE_TRIGGER_EVENT = (NIDCPOWER_VAL_BASE + 52);
        public const int NIDCPOWER_VAL_START_TRIGGER = (NIDCPOWER_VAL_BASE + 34);
        public const int NIDCPOWER_VAL_SOURCE_TRIGGER = (NIDCPOWER_VAL_BASE + 35);
        public const int NIDCPOWER_VAL_MEASURE_TRIGGER = (NIDCPOWER_VAL_BASE + 36);
        public const int NIDCPOWER_VAL_SEQUENCE_ADVANCE_TRIGGER = (NIDCPOWER_VAL_BASE + 37);
        public const int NIDCPOWER_VAL_PULSE_TRIGGER = (NIDCPOWER_VAL_BASE + 53);
        public const int NIDCPOWER_VAL_SHUTDOWN_TRIGGER = (NIDCPOWER_VAL_BASE + 118);
        public const int NIDCPOWER_VAL_NORMAL = (NIDCPOWER_VAL_BASE + 38);
        public const int NIDCPOWER_VAL_FAST = (NIDCPOWER_VAL_BASE + 39);
        public const int NIDCPOWER_VAL_SLOW = (NIDCPOWER_VAL_BASE + 41);
        public const int NIDCPOWER_VAL_CUSTOM = (NIDCPOWER_VAL_BASE + 42);
        public const int NIDCPOWER_VAL_DC_NOISE_REJECTION_SECOND_ORDER = (NIDCPOWER_VAL_BASE + 43);
        public const int NIDCPOWER_VAL_DC_NOISE_REJECTION_NORMAL = (NIDCPOWER_VAL_BASE + 44);
        public const int NIDCPOWER_VAL_KEEP_IN_MEMORY = (NIDCPOWER_VAL_BASE + 45);
        public const int NIDCPOWER_VAL_WRITE_TO_EEPROM = (NIDCPOWER_VAL_BASE + 46);
        public const int NIDCPOWER_VAL_INTERNAL_REFERENCE_5V = (NIDCPOWER_VAL_BASE + 54);
        public const int NIDCPOWER_VAL_INTERNAL_REFERENCE_100KOHM = (NIDCPOWER_VAL_BASE + 55);
        public const int NIDCPOWER_VAL_INTERNAL_REFERENCE_GROUND = (NIDCPOWER_VAL_BASE + 56);
        public const int NIDCPOWER_VAL_INTERNAL_REFERENCE_NONE = (NIDCPOWER_VAL_BASE + 57);
        public const int NIDCPOWER_VAL_INTERNAL_REFERENCE_7V = (NIDCPOWER_VAL_BASE + 119);
        public const int NIDCPOWER_VAL_INTERNAL_REFERENCE_1KOHM = (NIDCPOWER_VAL_BASE + 120);
        public const int NIDCPOWER_VAL_COMPLIANCE_LIMIT_SYMMETRY_SYMMETRIC = 0;
        public const int NIDCPOWER_VAL_COMPLIANCE_LIMIT_SYMMETRY_ASYMMETRIC = 1;
        public const int NIDCPOWER_VAL_POWER_ALLOCATION_MODE_DISABLED = (NIDCPOWER_VAL_BASE + 58);
        public const int NIDCPOWER_VAL_POWER_ALLOCATION_MODE_AUTOMATIC = (NIDCPOWER_VAL_BASE + 59);
        public const int NIDCPOWER_VAL_POWER_ALLOCATION_MODE_MANUAL = (NIDCPOWER_VAL_BASE + 60);
        public const int NIDCPOWER_VAL_SMU_PS = (NIDCPOWER_VAL_BASE + 61);
        public const int NIDCPOWER_VAL_LCR = (NIDCPOWER_VAL_BASE + 62);
        public const int NIDCPOWER_VAL_E_LOAD = (NIDCPOWER_VAL_BASE + 154);
        public const int NIDCPOWER_VAL_AC_VOLTAGE = (NIDCPOWER_VAL_BASE + 63);
        public const int NIDCPOWER_VAL_AC_CURRENT = (NIDCPOWER_VAL_BASE + 64);
        public const int NIDCPOWER_VAL_DC_BIAS_OFF = (NIDCPOWER_VAL_BASE + 65);
        public const int NIDCPOWER_VAL_DC_BIAS_VOLTAGE = (NIDCPOWER_VAL_BASE + 66);
        public const int NIDCPOWER_VAL_DC_BIAS_CURRENT = (NIDCPOWER_VAL_BASE + 67);
        public const int NIDCPOWER_VAL_AUTO_RANGE_OFF = (NIDCPOWER_VAL_BASE + 68);
        public const int NIDCPOWER_VAL_AUTO_RANGE_ON = (NIDCPOWER_VAL_BASE + 70);
        public const int NIDCPOWER_VAL_MEASUREMENT_TIME_SHORT = (NIDCPOWER_VAL_BASE + 71);
        public const int NIDCPOWER_VAL_MEASUREMENT_TIME_MEDIUM = (NIDCPOWER_VAL_BASE + 72);
        public const int NIDCPOWER_VAL_MEASUREMENT_TIME_LONG = (NIDCPOWER_VAL_BASE + 73);
        public const int NIDCPOWER_VAL_MEASUREMENT_TIME_CUSTOM = (NIDCPOWER_VAL_BASE + 117);
        public const int NIDCPOWER_VAL_ONBOARD_STORAGE = (NIDCPOWER_VAL_BASE + 74);
        public const int NIDCPOWER_VAL_AS_DEFINED = (NIDCPOWER_VAL_BASE + 75);
        public const int NIDCPOWER_VAL_AS_CONFIGURED = (NIDCPOWER_VAL_BASE + 146);
        public const int NIDCPOWER_VAL_LCR_LOAD_COMPENSATION_SPOT_REFERENCE_VALUE_TYPE_IMPEDANCE = (NIDCPOWER_VAL_BASE + 76);
        public const int NIDCPOWER_VAL_LCR_LOAD_COMPensation_SPOT_REFERENCE_VALUE_TYPE_IDEAL_CAPACITANCE = (NIDCPOWER_VAL_BASE + 77);
        public const int NIDCPOWER_VAL_LCR_LOAD_COMPENSATION_SPOT_REFERENCE_VALUE_TYPE_IDEAL_INDUCTANCE = (NIDCPOWER_VAL_BASE + 78);
        public const int NIDCPOWER_VAL_LCR_LOAD_COMPENSATION_SPOT_REFERENCE_VALUE_TYPE_IDEAL_RESISTANCE = (NIDCPOWER_VAL_BASE + 79);
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_ALL = -1;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_VOLTAGE_OUTPUT_HIGH = 1;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_VOLTAGE_OUTPUT_LOW = 2;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_CURRENT_MEASURE_HIGH = 4;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_CURRENT_MEASURE_LOW = 8;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_VOLTAGE_CHANGE_HIGH = 16;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_VOLTAGE_CHANGE_LOW = 32;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_CURRENT_CHANGE_HIGH = 64;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_CURRENT_CHANGE_LOW = 128;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_VOLTAGE_SATURATED = 256;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_CURRENT_SATURATED = 512;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_VOLTAGE_MEASURE_HIGH = 1024;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_VOLTAGE_MEASURE_LOW = 2048;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_SELF_TEST_MEASUREMENT_HIGH = 4096;
        public const int NIDCPOWER_VAL_OUTPUT_CUTOFF_REASON_SELF_TEST_MEASUREMENT_LOW = 8192;
        public const int NIDCPOWER_VAL_RANGE_UP_TO_LIMIT_THEN_DOWN = (NIDCPOWER_VAL_BASE + 107);
        public const int NIDCPOWER_VAL_RANGE_UP = (NIDCPOWER_VAL_BASE + 108);
        public const int NIDCPOWER_VAL_RANGE_UP_AND_DOWN = (NIDCPOWER_VAL_BASE + 109);
        public const int NIDCPOWER_VAL_APERTURE_TIME_AUTO = (NIDCPOWER_VAL_BASE + 110);
        public const int NIDCPOWER_VAL_APERTURE_TIME_CUSTOM = (NIDCPOWER_VAL_BASE + 111);
        public const int NIDCPOWER_VAL_THRESHOLD_MODE_NORMAL = (NIDCPOWER_VAL_BASE + 112);
        public const int NIDCPOWER_VAL_THRESHOLD_MODE_FAST_STEP = (NIDCPOWER_VAL_BASE + 113);
        public const int NIDCPOWER_VAL_THRESHOLD_MODE_HIGH_HYSTERESIS = (NIDCPOWER_VAL_BASE + 114);
        public const int NIDCPOWER_VAL_THRESHOLD_MODE_MEDIUM_HYSTERESIS = (NIDCPOWER_VAL_BASE + 115);
        public const int NIDCPOWER_VAL_THRESHOLD_MODE_HOLD = (NIDCPOWER_VAL_BASE + 116);
        public const int NIDCPOWER_VAL_ZERO_M = (NIDCPOWER_VAL_BASE + 121);
        public const int NIDCPOWER_VAL_NI_STANDARD_0_5M = (NIDCPOWER_VAL_BASE + 153);
        public const int NIDCPOWER_VAL_NI_STANDARD_1M = (NIDCPOWER_VAL_BASE + 122);
        public const int NIDCPOWER_VAL_NI_STANDARD_2M = (NIDCPOWER_VAL_BASE + 123);
        public const int NIDCPOWER_VAL_NI_STANDARD_4M = (NIDCPOWER_VAL_BASE + 124);
        public const int NIDCPOWER_VAL_NI_STANDARD_TRIAXIAL_1M = (NIDCPOWER_VAL_BASE + 139);
        public const int NIDCPOWER_VAL_NI_STANDARD_TRIAXIAL_2M = (NIDCPOWER_VAL_BASE + 140);
        public const int NIDCPOWER_VAL_NI_STANDARD_TRIAXIAL_4M = (NIDCPOWER_VAL_BASE + 141);
        public const int NIDCPOWER_VAL_CUSTOM_ONBOARD_STORAGE = (NIDCPOWER_VAL_BASE + 125);
        public const int NIDCPOWER_VAL_CUSTOM_AS_CONFIGURED = (NIDCPOWER_VAL_BASE + 126);
        public const int NIDCPOWER_VAL_ISOLATED = (NIDCPOWER_VAL_BASE + 128);
        public const int NIDCPOWER_VAL_NON_ISOLATED = (NIDCPOWER_VAL_BASE + 129);
        public const int NIDCPOWER_VAL_OPEN_COMPENSATION = (NIDCPOWER_VAL_BASE + 130);
        public const int NIDCPOWER_VAL_SHORT_COMPENSATION = (NIDCPOWER_VAL_BASE + 131);
        public const int NIDCPOWER_VAL_LOAD_COMPENSATION = (NIDCPOWER_VAL_BASE + 132);
        public const int NIDCPOWER_VAL_OPEN_CUSTOM_CABLE_COMPENSATION = (NIDCPOWER_VAL_BASE + 133);
        public const int NIDCPOWER_VAL_SHORT_CUSTOM_CABLE_COMPENSATION = (NIDCPOWER_VAL_BASE + 134);
        public const int NIDCPOWER_VAL_APERTURE_TIME_AUTO_MODE_OFF = (NIDCPOWER_VAL_BASE + 135);
        public const int NIDCPOWER_VAL_APERTURE_TIME_AUTO_MODE_SHORT = (NIDCPOWER_VAL_BASE + 136);
        public const int NIDCPOWER_VAL_APERTURE_TIME_AUTO_MODE_NORMAL = (NIDCPOWER_VAL_BASE + 137);
        public const int NIDCPOWER_VAL_APERTURE_TIME_AUTO_MODE_LONG = (NIDCPOWER_VAL_BASE + 138);
        public const int NIDCPOWER_VAL_LCR_SOURCE_DELAY_MODE_AUTOMATIC = (NIDCPOWER_VAL_BASE + 144);
        public const int NIDCPOWER_VAL_LCR_SOURCE_DELAY_MODE_MANUAL = (NIDCPOWER_VAL_BASE + 145);
        public const int NIDCPOWER_VAL_LCR_IMPEDANCE_RANGE = (NIDCPOWER_VAL_BASE + 142);
        public const int NIDCPOWER_VAL_LCR_LOAD_CONFIGURATION = (NIDCPOWER_VAL_BASE + 143);
        public const int NIDCPOWER_VAL_EVENT_OUTPUT_BEHAVIOR_PULSE = (NIDCPOWER_VAL_BASE + 147);
        public const int NIDCPOWER_VAL_EVENT_OUTPUT_BEHAVIOR_TOGGLE = (NIDCPOWER_VAL_BASE + 148);
        public const int NIDCPOWER_VAL_EVENT_TOGGLE_INITIAL_STATE_LOW = (NIDCPOWER_VAL_BASE + 149);
        public const int NIDCPOWER_VAL_EVENT_TOGGLE_INITIAL_STATE_HIGH = (NIDCPOWER_VAL_BASE + 150);
        public const int NIDCPOWER_VAL_LCR_DC_BIAS_TRANSIENT_RESPONSE_NORMAL = (NIDCPOWER_VAL_BASE + 151);
        public const int NIDCPOWER_VAL_LCR_DC_BIAS_TRANSIENT_RESPONSE_CUSTOM = (NIDCPOWER_VAL_BASE + 152);
        public const int NIDCPOWER_VAL_CONDUCTION_VOLTAGE_MODE_AUTOMATIC = (NIDCPOWER_VAL_BASE + 155);
        public const int NIDCPOWER_VAL_CONDUCTION_VOLTAGE_MODE_ENABLED = (NIDCPOWER_VAL_BASE + 156);
        public const int NIDCPOWER_VAL_CONDUCTION_VOLTAGE_MODE_DISABLED = (NIDCPOWER_VAL_BASE + 157);
    }
}
